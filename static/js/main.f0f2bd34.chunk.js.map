{"version":3,"sources":["utils/styled-components/CenteredDashboard.js","components/Portfolio.js","components/Transactions.js","firebase/firebase.utils.js","utils/getQuoteEXI.js","utils/webUtils.js","components/Buy.js","utils/tabs/DashboardTabs.js","pages/Dashboard.js","utils/styled-components/CenteredCard.js","utils/forms/RegisterForm.js","utils/containers/RegisterContainer.js","pages/Register.js","utils/forms/SignInForm.js","utils/containers/SignInContainer.js","pages/Signin.js","components/Header.js","components/Layout.js","components/ProtectedRoute.js","utils/renderMergedProps.js","components/PropsRoute.js","App.js","serviceWorker.js","index.js"],"names":["CenteredDashboard","styled","div","Portfolio","props","ListGroup","quoteData","portfolio","map","curr","Item","style","color","colors","ticker","key","latestPrice","quantity","today","Transactions","transactions","console","log","sortedTransactions","sort","a","b","date","seconds","total","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","balance","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","quote","sym","axios","response","data","getPortfolio","currentUser","portfolioArr","collection","then","querySnapShot","forEach","push","getTransactions","transactionArr","id","getTodaysQuote","promises","parseFloat","open","undefined","latest","Promise","all","results","Buy","handleChange","event","setState","target","name","value","handleTicker","calculateAmount","preventDefault","test","Math","round","state","toFixed","alert","getCurrentUserData","userData","disabled","handleSubmit","firebaseUser","tickerSet","Set","currentID","currentQuant","add","has","toUTCString","openPrice","onSnapshot","snapShot","this","Form","onSubmit","InputGroup","className","Prepend","Text","FormControl","onChange","placeholder","aria-label","Button","type","onClick","marginLeft","React","Component","DashboardTabs","todaysPrices","Tabs","defaultActiveKey","Tab","eventKey","title","handle","Dashboard","CenteredCard","RegisterForm","password","confirmPassword","createUserWithEmailAndPassword","user","registered","history","error","Group","controlId","Label","Control","username","variant","withRouter","RegisterContainer","Container","Row","Col","Card","Body","Title","Link","href","Register","SignInForm","signInWithEmailAndPassword","to","SignInContainer","SignIn","Header","Navbar","bg","Brand","Nav","signOut","Layout","children","ProtectedRoute","Comp","component","loggedIn","path","rest","render","pathname","prevLocation","renderMergedProps","finalProps","Object","assign","createElement","PropsRoute","routeProps","App","unsubscribeFromAuth","onAuthStateChanged","exact","Signin","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f0f2bd34.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst CenteredDashboard = styled.div`\n  margin: 10vh 10%;\n`;\n\nexport default CenteredDashboard;\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst Portfolio = props => {\n  // const { today, colors, portfolio } = props;\n  // console.log(\"Portfolio props: -------->\", props.portfolio);\n  // const tickerApple = props.portfolio[0].ticker;\n  // console.log(\"Colors props: -------->\", props.quoteData.colors[tickerApple]);\n  // console.log(\"Today props: -------->\", props.quoteData.today);\n\n  return (\n    <div>\n      <ListGroup>\n        {props.quoteData &&\n          props.portfolio.map(curr => (\n            <ListGroup.Item\n              style={{ color: props.quoteData.colors[curr.ticker] }}\n              key={curr.latestPrice}\n            >\n              {curr.ticker} - {curr.quantity} shares - $\n              {props.quoteData.today[curr.ticker][1]}\n            </ListGroup.Item>\n          ))}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Portfolio;\n// style={{ color: colors[ticker] }}\n//(curr.quantity * props.today[curr.ticker][1]).toFixed(2)\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst Transactions = ({ transactions }) => {\n  console.log(\"transactions: \", transactions);\n  const sortedTransactions = transactions.sort(\n    (a, b) => a.date.seconds - b.date.seconds\n  );\n  console.log(transactions);\n  return (\n    <div>\n      <ListGroup>\n        {sortedTransactions &&\n          sortedTransactions.map(({ date, ticker, quantity, total }) => (\n            <ListGroup.Item key={date.seconds}>\n              {ticker} - {quantity} shares @ ${total}\n            </ListGroup.Item>\n          ))}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Transactions;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyB4op2RXRGlOhatncYOSb-HyhuEt2-HT1A\",\n  authDomain: \"my-stock-portfolio-a6e5e.firebaseapp.com\",\n  databaseURL: \"https://my-stock-portfolio-a6e5e.firebaseio.com\",\n  projectId: \"my-stock-portfolio-a6e5e\",\n  storageBucket: \"my-stock-portfolio-a6e5e.appspot.com\",\n  messagingSenderId: \"853804645767\",\n  appId: \"1:853804645767:web:ed54a9d1baacb2688d2722\",\n  measurementId: \"G-Q40TVKBGR8\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  //Snapshot has an \"exists\" property with a boolean value (true/false)\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    const balance = 5000;\n\n    try {\n      //Creating a new user with the .set method\n      await userRef.set({\n        displayName,\n        balance: balance,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating message: \", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n","import axios from \"axios\";\n\nconst quote = async sym => {\n  try {\n    const response = await axios.get(\n      `https://cloud.iexapis.com/stable/stock/${sym}/quote?token=pk_605188193e7f43949de64f3be974e5c5`\n    );\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default quote;\n//https://cloud.iexapis.com/undefined/stock/AAPL/quote?token=undefined\n","import React from \"react\";\nimport quote from \"../utils/getQuoteEXI\";\nimport { auth, firestore } from \"../firebase/firebase.utils\";\n\nexport const getPortfolio = async currentUser => {\n  console.log(\"getPortfolio currentUser: \", currentUser);\n  const portfolioArr = [];\n  await firestore\n    .collection(\"users\")\n    .doc(currentUser.uid)\n    .collection(\"portfolio\")\n    .get()\n    .then(querySnapShot => {\n      querySnapShot.forEach(doc => {\n        //console.log(doc.id, doc.data());\n        portfolioArr.push(doc.data());\n      });\n    });\n  return portfolioArr;\n};\n\nexport const getTransactions = async currentUser => {\n  const transactionArr = [];\n  //console.log(\"getTransactions webUtils currentUser - \", currentUser);\n\n  await firestore\n    .collection(\"users\")\n    .doc(currentUser.id)\n    .collection(\"transactions\")\n    .get()\n    .then(querySnapShot => {\n      querySnapShot.forEach(doc => {\n        //console.log(doc.id, doc.data());\n        transactionArr.push(doc.data());\n      });\n    });\n  return transactionArr;\n};\n\n// export const getTodaysQuote = async portfolio => {\n//   let today = {};\n//   let colors = {};\n\n//   console.log(\"getTodaysQuote utils: \", portfolio);\n\n//   await portfolio.map(async ({ ticker, latestPrice }) => {\n//     const quoteData = await quote(ticker);\n//     console.log(\"Mapping through portfolio: \", ticker, typeof ticker);\n\n//     today[ticker] = [\n//       parseFloat(quoteData.open) || parseFloat(latestPrice),\n//       quoteData.latestPrice\n//     ];\n//     console.log(\"Today **** \", today[ticker][0]);\n\n//     if (today[ticker][0] > today[ticker][1]) {\n//       colors[ticker] = \"red\";\n//     } else if (today[ticker][0] < today[ticker][1]) {\n//       colors[ticker] = \"green\";\n//     } else {\n//       colors[ticker] = \"gray\";\n//     }\n//   });\n//   return { colors, today };\n// };\n\nexport const getTodaysQuote = async portfolio => {\n  const promises = portfolio.map(async ({ ticker, latestPrice }) => {\n    const quoteData = await quote(ticker);\n    let today = [\n      parseFloat(quoteData.open) || parseFloat(latestPrice),\n      quoteData.latestPrice\n    ];\n\n    let color = undefined;\n    if (today[0] > today[1]) {\n      color = \"red\";\n    } else if (today[0] < today[1]) {\n      color = \"green\";\n    } else {\n      color = \"gray\";\n    }\n\n    return { ticker: ticker, latest: today, color: color };\n  });\n\n  const results = await Promise.all(promises);\n\n  let today = {};\n  let colors = {};\n\n  results.map(({ ticker, latest, color }) => {\n    today[ticker] = latest;\n    colors[ticker] = color;\n  });\n\n  return { today, colors };\n};\n\n//  export const getCurrentUserData = async (user) => {\n//   const userRef = await firestore.doc(`users/${user.uid}`);\n//   const userData;\n\n//   await userRef.onSnapshot(snapShot => {\n//     userData = snapShot.data()\n//   });\n\n//   return userData;\n// };\n\nexport const handleChange = event => {\n  this.setState({\n    [event.target.name]: event.target.value\n  });\n};\n","import React from \"react\";\nimport { InputGroup, FormControl, Button, Form } from \"react-bootstrap\";\nimport { auth, firestore } from \"../firebase/firebase.utils\";\nimport quote from \"../utils/getQuoteEXI\";\nimport { getCurrentUserData } from \"../utils/webUtils\";\n\nclass Buy extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      ticker: \"\",\n      quantity: null,\n      total: 0,\n      userData: null,\n      test: false,\n      disabled: true,\n      latestPrice: \"\",\n      openPrice: \"\"\n    };\n  }\n  componentDidMount() {\n    this.getCurrentUserData();\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleTicker = event => {\n    this.setState({\n      ticker: event.target.name\n    });\n  };\n\n  calculateAmount = async event => {\n    event.preventDefault();\n    //Check the quantity to see if its a number, and if it's a float, alert if its not\n    this.setState({\n      test: true,\n      quantity: Math.round(this.state.quantity)\n    });\n\n    //Call the api for the symbol\n\n    const quoteData = await quote(this.state.ticker);\n\n    this.setState({\n      latestPrice: quoteData.latestPrice.toFixed(2)\n    });\n\n    //Check if the ticker symbol is valid, alert if it's not\n\n    if (quoteData === \"Request failed with status code 404\") {\n      alert(\"Invalid stock symbol, try another\");\n    }\n\n    this.setState({\n      total: this.state.quantity * quoteData.latestPrice\n    });\n\n    await this.getCurrentUserData();\n\n    //Check the total against the balance, if the total is more than the balance, alert. Else, alter the user's balance\n\n    if (this.state.userData && this.state.total > this.state.userData.balance) {\n      return;\n    }\n\n    this.setState({ disabled: false });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const { displayName, email, createdAt, balance } = this.state.userData;\n    const firebaseUser = await auth.currentUser;\n\n    if (this.props.currentUser) {\n      firestore\n        .collection(\"users\")\n        .doc(firebaseUser.uid)\n        .set({\n          displayName: displayName,\n          email: email,\n          createdAt: createdAt,\n          balance: (balance - this.state.total).toFixed(2)\n        });\n    }\n    const tickerSet = new Set();\n\n    //Make sure we can update the transaction list and portfolio\n\n    const transactions = await firestore\n      .collection(\"users\")\n      .doc(firebaseUser.uid)\n      .collection(\"portfolio\")\n      .get()\n      .then(querySnapShot => {\n        console.log(\"Query snap shot: \", querySnapShot);\n        querySnapShot.forEach(doc => {\n          let data = doc.data();\n          let currentID = doc.id;\n          let currentQuant = data.quantity;\n          tickerSet.add(data.ticker);\n          if (data.ticker === this.state.ticker) {\n            firestore\n              .collection(\"users\")\n              .doc(firebaseUser.uid)\n              .collection(\"portfolio\")\n              .doc(currentID)\n              .set({\n                ticker: this.state.ticker,\n                quantity: this.state.quantity + currentQuant,\n                latestPrice: this.state.latestPrice\n              });\n          }\n        });\n      });\n\n    //Create a portfolio instance/collection for the user\n    if (!tickerSet.has(this.state.ticker)) {\n      await firestore\n        .collection(\"users\")\n        .doc(firebaseUser.uid)\n        .collection(\"portfolio\")\n        .add({\n          ticker: this.state.ticker,\n          quantity: this.state.quantity,\n          latestPrice: this.state.latestPrice\n        });\n    }\n    //Create a transaction instance/collection for the user\n    await firestore\n      .collection(\"users\")\n      .doc(firebaseUser.uid)\n      .collection(\"transactions\")\n      .add({\n        ticker: this.state.ticker,\n        quantity: this.state.quantity,\n        total: this.state.total.toFixed(2),\n        latestPrice: this.state.latestPrice,\n        date: new Date().toUTCString()\n      });\n\n    this.setState({\n      ticker: \"\",\n      quantity: null,\n      total: 0,\n      userData: this.state.userData,\n      test: false,\n      disabled: true,\n      latestPrice: \"\",\n      openPrice: \"\"\n    });\n  };\n\n  getCurrentUserData = async () => {\n    const firebaseUser = await auth.currentUser;\n    const userRef = await firestore.doc(`users/${firebaseUser.uid}`);\n\n    await userRef.onSnapshot(snapShot => {\n      this.setState({ userData: snapShot.data() });\n    });\n  };\n\n  render() {\n    const { userData, total } = this.state;\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <br />\n          <h2>\n            Your balance is $\n            {this.state.userData && this.state.userData.balance}\n          </h2>\n          <br />\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>Ticker Symbol</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              onChange={this.handleChange}\n              name=\"ticker\"\n              value={this.state.ticker}\n              placeholder=\"Choose a Ticker Symbol. (Ex. AAPL for Apple)\"\n              aria-label=\"Ticker Symbol\"\n            />\n          </InputGroup>\n          <br />\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>Number of Shares</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              onChange={this.handleChange}\n              name=\"quantity\"\n              value={this.state.quantity}\n              placeholder=\"Type in how many shares you want to buy, whole numbers please\"\n              aria-label=\"Amount (to the nearest dollar)\"\n            />\n          </InputGroup>\n          <br />\n          <Button type=\"input\" onClick={this.calculateAmount}>\n            Calculate\n          </Button>\n          {this.state && this.state.test ? (\n            <Button\n              disabled={this.state && this.state.disabled ? true : false}\n              style={{ marginLeft: \"20px\" }}\n              type=\"submit\"\n            >\n              Buy\n            </Button>\n          ) : null}\n          <br />\n          <br />\n          {<h1>{`$${this.state.total.toFixed(2)}`}</h1>}\n          {userData && userData.balance < total ? (\n            <div style={{ color: \"red\" }}>\n              Your total is more than your balance\n            </div>\n          ) : null}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Buy;\n","import React from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport Portfolio from \"../../components/Portfolio\";\nimport Transactions from \"../../components/Transactions\";\nimport Buy from \"../../components/Buy\";\n\nimport quote from \"../../utils/getQuoteEXI\";\n\nclass DashboardTabs extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      colors: null,\n      todaysPrices: null\n    };\n  }\n\n  // componentDidMount() {\n  //   console.log(\"I'm in componentDidMount of  ******** Dash board tabs\");\n  //   this.getTodaysQuote();\n  // }\n\n  // getTodaysQuote = async () => {\n  //   let today = {};\n  //   let colors = {};\n\n  //   console.log(\"****** get todays quote props: \", this.props.portfolio);\n\n  //   await this.props.portfolio.map(async ({ ticker, latestPrice }) => {\n  //     console.log(\"get todays quote ticker: \", ticker);\n  //     const quoteData = await quote(ticker);\n  //     console.log(\"Portfolio quote data: \", quoteData);\n\n  //     today[ticker] = [quoteData.open || latestPrice, quoteData.latestPrice];\n\n  //     if (today[ticker][0] > today[ticker][1]) {\n  //       colors[ticker] = \"red\";\n  //     } else if (today[ticker][0] < today[ticker][1]) {\n  //       colors[ticker] = \"green\";\n  //     } else {\n  //       colors[ticker] = \"gray\";\n  //     }\n  //   });\n  //   console.log(\"Colors: \", colors);\n\n  //   this.setState(state => {\n  //     return { colors: colors, todaysPrices: today };\n  //   });\n  //   //\n  //   console.log(\"Dashboard Tabs state: \", this.state);\n  // };\n\n  render() {\n    const {\n      portfolio,\n      transactions,\n      currentUser,\n      quoteData,\n      handleChange\n    } = this.props;\n    console.log(\"Portfolio in tabs: \", portfolio);\n    return (\n      <Tabs\n        onClick={this.getTodaysQuote}\n        defaultActiveKey=\"buy\"\n        id=\"uncontrolled-tab-example\"\n      >\n        <Tab eventKey=\"portfolio\" title=\"Portfolio\">\n          <Portfolio portfolio={portfolio} quoteData={quoteData} />\n        </Tab>\n        <Tab eventKey=\"transactions\" title=\"Transactions\">\n          <Transactions transactions={transactions} />\n        </Tab>\n        <Tab eventKey=\"buy\" title=\"Buy\">\n          <Buy currentUser={currentUser} handle={handleChange} />\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n\nexport default DashboardTabs;\n","import React from \"react\";\n\nimport CenteredDashboard from \"../utils/styled-components/CenteredDashboard\";\nimport DashboardTabs from \"../utils/tabs/DashboardTabs\";\n\nimport { auth, firestore } from \"../firebase/firebase.utils\";\n\nimport {\n  getPortfolio,\n  getTransactions,\n  getTodaysQuote,\n  getCurrentUserData\n} from \"../utils/webUtils\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      portfolio: [],\n      transactions: [],\n      currentUser: null,\n      quoteData: null\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props && this.props.currentUser) {\n      const portfolio = await getPortfolio(this.props.currentUser);\n      console.log(\"portfolio - \", portfolio);\n      const transactions = await getTransactions(this.props.currentUser);\n      //console.log(\"transactions - \", transactions);\n      const quoteData = await getTodaysQuote(portfolio);\n      console.log(\"quoteData - \", quoteData);\n      this.setState({\n        portfolio: portfolio,\n        transactions: transactions,\n        currentUser: this.props.currentUser,\n        quoteData: quoteData\n      });\n\n      // if(this.props && this.props.currentUser){\n      //   const currentUser = await getCurrentUserData(this.props.currentUser)\n      // }\n    }\n  }\n\n  render() {\n    return (\n      <CenteredDashboard>\n        {this.state &&\n        this.state.portfolio &&\n        this.state.transactions &&\n        this.state.currentUser ? (\n          <DashboardTabs\n            portfolio={this.state.portfolio}\n            transactions={this.state.transactions}\n            currentUser={this.state.currentUser}\n            quoteData={this.state.quoteData}\n          />\n        ) : null}\n      </CenteredDashboard>\n    );\n  }\n}\nexport default Dashboard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CenteredCard = styled.div`\n  margin-top: 20vh;\n`;\nexport default CenteredCard;\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { withRouter } from \"react-router-dom\";\n\nclass RegisterForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      registered: false,\n      error: \"\"\n    };\n  }\n\n  handleChange = async event => {\n    await this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    console.log(\"RegisterForm props: \", this.props);\n    const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(`Passwords don't match`);\n      return;\n    }\n\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n\n      //Remember createUserProfileDocument takes an additionalData parameter\n      createUserProfileDocument(user, { displayName, balance: 5000 });\n\n      this.setState({\n        registered: true\n      });\n\n      console.log(\"Registered: \", this.state.registered);\n\n      //Reset state\n      this.setState({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n\n      this.props.history.push(\"/\");\n\n      // return <Redirect to=\"/\" />;\n    } catch (error) {\n      console.log(error.message);\n      this.setState({ error: error.message });\n      //console.error(error);\n    }\n  };\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group controlId=\"formBasicName\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"displayName\"\n            onChange={this.handleChange}\n            value={this.state.username}\n            placeholder=\"Enter username\"\n          />\n          <Form.Text className=\"text-muted\">\n            This name will be used as your profile name\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            onChange={this.handleChange}\n            value={this.state.email}\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <div style={{ color: \"red\" }}>{this.state.error}</div>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            onChange={this.handleChange}\n            value={this.state.password}\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"confirmPassword\"\n            onChange={this.handleChange}\n            value={this.state.confirmPassword}\n            placeholder=\"Retype your password\"\n          />\n        </Form.Group>\n\n        {this.state.registered ? (\n          <Button variant=\"secondary\">Sign In</Button>\n        ) : (\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        )}\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(RegisterForm);\n","import React from \"react\";\nimport { Row, Col, Card, Container, Button } from \"react-bootstrap\";\nimport RegisterForm from \"../forms/RegisterForm\";\nimport { signInWithGoogle } from \"../../firebase/firebase.utils\";\n\nconst RegisterContainer = () => (\n  <Container>\n    <Row>\n      <Col>\n        <Card>\n          <Card.Body>\n            <Card.Title>Register</Card.Title>\n            <br />\n            <RegisterForm />\n            <br />\n            <Card.Link href=\"/\">Already a User?</Card.Link>\n            <Button onClick={signInWithGoogle} style={{ marginLeft: \"20px\" }}>\n              Sign Up With Google\n            </Button>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default RegisterContainer;\n","import React from \"react\";\nimport CenteredCard from \"../utils/styled-components/CenteredCard\";\nimport RegisterContainer from \"../utils/containers/RegisterContainer\";\n\nconst Register = () => (\n  <CenteredCard>\n    <RegisterContainer />\n  </CenteredCard>\n);\n\nexport default Register;\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignInForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = async event => {\n    await this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { email, password } = this.state;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({ email: \"\", password: \"\" });\n      return <Redirect to=\"dashboard\" />;\n    } catch (error) {\n      console.log(error);\n    }\n\n    return <Redirect to=\"/\" />;\n  };\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            onChange={this.handleChange}\n            value={this.state.email}\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            onChange={this.handleChange}\n            value={this.state.password}\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default SignInForm;\n","import React from \"react\";\nimport { Row, Col, Card, Container, Button } from \"react-bootstrap\";\nimport SignInForm from \"../forms/SignInForm\";\n\nimport { signInWithGoogle } from \"../../firebase/firebase.utils\";\n\nconst SignInContainer = () => (\n  <Container>\n    <Row>\n      <Col>\n        <Card>\n          <Card.Body>\n            <Card.Title> Sign In</Card.Title>\n            <br />\n            <SignInForm />\n            <br />\n            <Card.Link href=\"/register\">Register as a User</Card.Link>\n            <Button onClick={signInWithGoogle} style={{ marginLeft: \"20px\" }}>\n              Sign In With Google\n            </Button>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default SignInContainer;\n","import React from \"react\";\nimport SignInContainer from \"../utils/containers/SignInContainer\";\nimport CenteredCard from \"../utils/styled-components/CenteredCard\";\n\nconst SignIn = () => (\n  <CenteredCard>\n    <SignInContainer />\n  </CenteredCard>\n);\n\nexport default SignIn;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { auth } from \"../firebase/firebase.utils\";\n\nconst Header = ({ currentUser }) => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand href=\"/dashboard\">My Stock Portfolio</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#\"></Nav.Link>\n        <Nav.Link href=\"#features\">Features</Nav.Link>\n        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n      </Nav>\n      <Nav>\n        {currentUser ? (\n          <div>\n            <Nav.Link href=\"#\" onClick={() => auth.signOut()}>\n              Sign Out\n            </Nav.Link>\n          </div>\n        ) : (\n          <div>\n            <Nav.Link href=\"/\">Sign In</Nav.Link>\n          </div>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\n\nconst Layout = ({ children, currentUser }) => {\n  return (\n    <div>\n      <Header currentUser={currentUser} />\n      <div>{children}</div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Comp, loggedIn, path, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        return loggedIn ? (\n          <Comp {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: {\n                prevLocation: path,\n                error: \"You need to sign in first!\"\n              }\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\nexport default renderMergedProps;\n","import React from \"react\";\nimport renderMergedProps from \"../utils/renderMergedProps\";\nimport { Route } from \"react-router-dom\";\n\nconst PropsRoute = ({ component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={routeProps => {\n        return renderMergedProps(component, routeProps, rest);\n      }}\n    />\n  );\n};\n\nexport default PropsRoute;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Register from \"./pages/Register\";\nimport Signin from \"./pages/Signin\";\n\nimport Layout from \"./components/Layout\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport PropsRoute from \"./components/PropsRoute\";\n\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null,\n      firebaseUser: null\n    };\n  }\n\n  //We need to close subscriptions when this unmounts - prevent memory leaks\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        //Remember createUserProfileDocument returns the userReference\n        const userRef = await createUserProfileDocument(userAuth);\n\n        //You can acquire the user data in firestore off of the .onSnapshot method\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n        });\n      }\n      //Else set currentUser to null\n      this.setState({ currentUser: userAuth });\n    });\n  }\n\n  componentWillUnmount() {\n    //close subscription\n    this.unsubscribeFromAuth();\n  }\n  render() {\n    let { currentUser, firebaseUser } = this.state;\n    //console.log(\"App.js currentUser: \", currentUser);\n    return (\n      <Router>\n        <Switch>\n          <Layout currentUser={currentUser}>\n            <PropsRoute\n              exact\n              path=\"/\"\n              currentUser={currentUser}\n              component={currentUser ? Dashboard : Signin}\n            ></PropsRoute>\n            <ProtectedRoute\n              exact\n              path=\"/dashboard\"\n              loggedIn={currentUser}\n              component={Dashboard}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              component={currentUser ? Dashboard : Register}\n            ></Route>\n          </Layout>\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}